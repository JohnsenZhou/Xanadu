(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{379:function(t,a,s){"use strict";s.r(a);var e=s(25),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"第-3-题：介绍下-set、map、weakset-和-weakmap-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-3-题：介绍下-set、map、weakset-和-weakmap-的区别"}},[t._v("#")]),t._v(" 第 3 题：介绍下 Set、Map、WeakSet 和 WeakMap 的区别")]),t._v(" "),s("h2",{attrs:{id:"set"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[t._v("#")]),t._v(" Set")]),t._v(" "),s("p",[t._v("类似数组，但是成员的值都是唯一的，没有重复的值,可以用来做数组的去重。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 例")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [1, 2, 3, 4]")]),t._v("\n")])])]),s("h3",{attrs:{id:"set-实例的属性和方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set-实例的属性和方法"}},[t._v("#")]),t._v(" Set 实例的属性和方法")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Set.prototype.size")]),t._v("：返回 Set 实例的成员总数。")]),t._v(" "),s("li",[s("code",[t._v("Set.prototype.add(value)")]),t._v("：添加某个值，返回 Set 结构本身。")]),t._v(" "),s("li",[s("code",[t._v("Set.prototype.delete(value)")]),t._v("：删除某个值，返回一个布尔值，表示删除是否成功。")]),t._v(" "),s("li",[s("code",[t._v("Set.prototype.has(value)")]),t._v("：返回一个布尔值，表示该值是否为 Set 的成员。")]),t._v(" "),s("li",[s("code",[t._v("Set.prototype.clear()")]),t._v("：清除所有成员，没有返回值。")]),t._v(" "),s("li",[s("code",[t._v("Set.prototype.keys()")]),t._v("：返回键名的遍历器")]),t._v(" "),s("li",[s("code",[t._v("Set.prototype.values()")]),t._v("：返回键值的遍历器")]),t._v(" "),s("li",[s("code",[t._v("Set.prototype.entries()")]),t._v("：返回键值对的遍历器")]),t._v(" "),s("li",[s("code",[t._v("Set.prototype.forEach()")]),t._v("：使用回调函数遍历每个成员")])]),t._v(" "),s("h2",{attrs:{id:"weakset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#weakset"}},[t._v("#")]),t._v(" WeakSet")]),t._v(" "),s("p",[t._v("与"),s("code",[t._v("Set")]),t._v("类似，有以下两个区别：")]),t._v(" "),s("p",[t._v("1."),s("code",[t._v("WeakSet")]),t._v(" 的成员只能是对象，而不能是其他类型的值")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ws "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WeakSet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TypeError: Invalid value used in weak set")]),t._v("\nws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TypeError: invalid value used in weak set")]),t._v("\n")])])]),s("p",[t._v("2."),s("code",[t._v("WeakSet")]),t._v(" 中的对象都是弱引用，即垃圾回收机制不考虑 "),s("code",[t._v("WeakSet")]),t._v(" 对该对象的引用，也就是说，如果其他对象都不再引用该对象，那么垃圾回收机制会自动回收该对象所占用的内存，不考虑该对象还存在于 "),s("code",[t._v("WeakSet")]),t._v(" 之中。")]),t._v(" "),s("p",[t._v("这是因为垃圾回收机制依赖引用计数，如果一个值的引用次数不为 0，垃圾回收机制就不会释放这块内存。结束使用该值之后，有时会忘记取消引用，导致内存无法释放，进而可能会引发内存泄漏。WeakSet 里面的引用，都不计入垃圾回收机制，所以就不存在这个问题。因此，WeakSet 适合临时存放一组对象，以及存放跟对象绑定的信息。只要这些对象在外部消失，它在 WeakSet 里面的引用就会自动消失。")]),t._v(" "),s("h3",{attrs:{id:"weakset-实例的属性和方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#weakset-实例的属性和方法"}},[t._v("#")]),t._v(" "),s("code",[t._v("WeakSet")]),t._v(" 实例的属性和方法")]),t._v(" "),s("ul",[s("li",[t._v("WeakSet.prototype.add(value)：向 WeakSet 实例添加一个新成员。")]),t._v(" "),s("li",[t._v("WeakSet.prototype.delete(value)：清除 WeakSet 实例的指定成员。")]),t._v(" "),s("li",[t._v("WeakSet.prototype.has(value)：返回一个布尔值，表示某个值是否在 WeakSet 实例之中。")])]),t._v(" "),s("h2",{attrs:{id:"map"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[t._v("#")]),t._v(" Map")]),t._v(" "),s("p",[t._v("JS 的对象（Object）本质上是键值对的集合，但是 Object 只能以字符串作为键值。Map 类似于对象，但是键不局限于字符串，各种类型的值都可以当做键。")]),t._v(" "),s("p",[t._v("Map 中的键值是有序的，而添加到对象中的键则不是。因此，当对它进行遍历时，Map 对象是按插入的顺序返回键值。")]),t._v(" "),s("p",[t._v("可以通过 size 属性直接获取一个 Map 的键值对个数，而 Object 的键值对个数只能手动计算。")]),t._v(" "),s("h3",{attrs:{id:"map-实例的属性和方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map-实例的属性和方法"}},[t._v("#")]),t._v(" Map 实例的属性和方法")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("Map.prototype.size")]),t._v("：返回 Map 实例的成员总数。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Map.prototype.set(key, value)")]),t._v("："),s("code",[t._v("set")]),t._v("方法设置键名"),s("code",[t._v("key")]),t._v("对应的键值为"),s("code",[t._v("value")]),t._v("，然后返回整个 Map 结构,因此可以采用链式写法。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" map "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Map.prototype.get(key)")]),t._v(": 读取 key 对应的键值")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Map.prototype.delete(key)")]),t._v("：删除某个键。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Map.prototype.has(key)")]),t._v("：返回一个布尔值，表示该值是否为 Map 的成员。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Map.prototype.clear()")]),t._v("：清除所有成员，没有返回值。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Map.prototype.keys()")]),t._v("：返回键名的遍历器")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Map.prototype.values()")]),t._v("：返回键值的遍历器")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Map.prototype.entries()")]),t._v("：返回键值对的遍历器")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Map.prototype.forEach()")]),t._v("：使用回调函数遍历每个成员")])])]),t._v(" "),s("h2",{attrs:{id:"weakmap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#weakmap"}},[t._v("#")]),t._v(" WeakMap")]),t._v(" "),s("p",[t._v("与"),s("code",[t._v("Map")]),t._v("类似，有以下两个区别：")]),t._v(" "),s("p",[t._v("1."),s("code",[t._v("WeakMap")]),t._v(" 的成员只能是对象，而不能是其他类型的值")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" map "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WeakMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TypeError: 1 is not an object!")]),t._v("\nmap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TypeError: Invalid value used as weak map key")]),t._v("\nmap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TypeError: Invalid value used as weak map key")]),t._v("\n")])])]),s("p",[t._v("2.和"),s("code",[t._v("WeakSet")]),t._v("类似"),s("code",[t._v("WeakMap")]),t._v("的键名所指向的对象，不计入垃圾回收机制。")]),t._v(" "),s("h3",{attrs:{id:"weakmap-实例的属性和方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#weakmap-实例的属性和方法"}},[t._v("#")]),t._v(" "),s("code",[t._v("WeakMap")]),t._v(" 实例的属性和方法")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Map.prototype.set(key, value)")]),t._v("："),s("code",[t._v("set")]),t._v("方法设置键名"),s("code",[t._v("key")]),t._v("对应的键值为"),s("code",[t._v("value")])]),t._v(" "),s("li",[s("code",[t._v("Map.prototype.get(key)")]),t._v(": 读取 key 对应的键值")]),t._v(" "),s("li",[s("code",[t._v("Map.prototype.delete(key)")]),t._v("：删除某个键。")]),t._v(" "),s("li",[s("code",[t._v("Map.prototype.has(key)")]),t._v("：返回一个布尔值，表示该值是否为 Map 的成员。")]),t._v(" "),s("li",[s("code",[t._v("Map.prototype.clear()")]),t._v("：清除所有成员，没有返回值。")])])])}),[],!1,null,null,null);a.default=n.exports}}]);