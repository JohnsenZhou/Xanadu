(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{245:function(t,s,e){"use strict";e.r(s);var a=e(17),v=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"设计模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设计模式"}},[t._v("#")]),t._v(" 设计模式")]),t._v(" "),e("p",[t._v("在软件工程中，"),e("code",[t._v("设计模式")]),t._v("（design pattern）是对软件设计中普遍存在（反复出现）的各种问题，所提出的简洁而优雅的解决方案。")]),t._v(" "),e("p",[t._v("设计模式并不直接用来完成代码的编写，而是描述在各种不同情况下，要怎么解决问题的一种方案。面向对象设计模式通常以类别或对象来描述其中的关系和相互作用，但不涉及用来完成应用程序的特定类别或对象。设计模式能使不稳定依赖于相对稳定、具体依赖于相对抽象，避免会引起麻烦的紧耦合，以增强软件设计面对并适应变化的能力。")]),t._v(" "),e("p",[t._v("在日常开发中，我们可能经常使用它们，只是不知道它们的名字而已。")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("将不变的部分和变化的部分隔开是每个设计模式的核心。")])]),t._v(" "),e("p",[t._v("这里主要介绍"),e("code",[t._v("JavaScript")]),t._v("开发中常见的14中设计模式：")]),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/pattern/1.html"}},[t._v("单例模式")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/pattern/2.html"}},[t._v("策略模式")])],1)])])}),[],!1,null,null,null);s.default=v.exports}}]);