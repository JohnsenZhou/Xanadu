(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{392:function(t,e,a){"use strict";a.r(e);var r=a(25),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"第-4-题：react-中过时和新增的生命周期。为什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第-4-题：react-中过时和新增的生命周期。为什么"}},[t._v("#")]),t._v(" 第 4 题：React 中过时和新增的生命周期。为什么")]),t._v(" "),a("h2",{attrs:{id:"过时"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#过时"}},[t._v("#")]),t._v(" 过时")]),t._v(" "),a("ul",[a("li",[t._v("componentWillMount")]),t._v(" "),a("li",[t._v("componentWillUpdate")]),t._v(" "),a("li",[t._v("componentWillReceiveProps")])]),t._v(" "),a("h2",{attrs:{id:"新增"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#新增"}},[t._v("#")]),t._v(" 新增")]),t._v(" "),a("ul",[a("li",[t._v("getDerivedStateFromProps")]),t._v(" "),a("li",[t._v("getSnapshotBeforeUpdate")])]),t._v(" "),a("h2",{attrs:{id:"原因"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原因"}},[t._v("#")]),t._v(" 原因")]),t._v(" "),a("p",[t._v("由于引入了 Fiber 架构，在 reconciliation 是可以中断的，一旦中断之后恢复的时候又会重新执行，导致 reconciliation 阶段的生命周期方法会被多次调用。")])])}),[],!1,null,null,null);e.default=s.exports}}]);