(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{243:function(t,r,a){"use strict";a.r(r);var s=a(17),e=Object(s.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"发布-订阅模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#发布-订阅模式"}},[t._v("#")]),t._v(" 发布-订阅模式")]),t._v(" "),a("h2",{attrs:{id:"定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),a("p",[t._v("发布-订阅模式又叫观察者模式，它定义对象之间一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都将得到通知。")]),t._v(" "),a("h2",{attrs:{id:"真实世界类比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#真实世界类比"}},[t._v("#")]),t._v(" 真实世界类比")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://refactoringguru.cn/images/patterns/content/observer/observer-comic-2-zh-2x.png",alt:"发布-订阅模式"}})]),t._v(" "),a("p",[t._v("如果你订阅了一份杂志或报纸， 那就不需要再去报摊查询新出版的刊物了。 出版社 （即应用中的 “发布者”） 会在刊物出版后 （甚至提前） 直接将最新一期寄送至你的邮箱中。")]),t._v(" "),a("p",[t._v("出版社负责维护订阅者列表， 了解订阅者对哪些刊物感兴趣。 当订阅者希望出版社停止寄送新一期的杂志时， 他们可随时从该列表中退出。")])])}),[],!1,null,null,null);r.default=e.exports}}]);